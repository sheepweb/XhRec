name: Build and Publish ShadowJar Pre-release

on:
  push:
    branches: [ "main" ]  # 当推送到 main 分支时触发
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # 必须包含历史记录，以便 Gradle 插件能正确生成版本信息
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: 'gradle'
    - name: chmod
      run: chmod +x gradlew

    - name: Validate Gradle wrapper
      uses: gradle/gradle-build-action@v2
      with:
        arguments: help --no-daemon

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: shadowJar --no-daemon

    - name: Create Pre-release and Upload Asset
      uses: softprops/action-gh-release@v2
      if: success()
      with:
        tag_name: pre-v${{ format('{0}-{1}', github.run_number, github.sha) }}
        name: Pre-release ${{ github.run_number }}
        body: |
          Automated pre-release build from GitHub Actions.
          - **Workflow Run:** [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          - **Branch:** ${{ github.ref_name }}
        draft: false
        prerelease: true
        files: |
          build/libs/*-all.jar
        # 生成校验和文件
        generate_release_notes: false
      env:
        # 提供 GITHUB_TOKEN 以便发布操作能与 GitHub API 交互
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
